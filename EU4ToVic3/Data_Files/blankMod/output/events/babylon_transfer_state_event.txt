namespace = transfer_state_event

transfer_state_event.1 = {
	type = country_event
	placement = ROOT

	trigger = {
		exists = scope:target_country
	}

	title = transfer_state_event.t
	desc = transfer_state_event.d

	event_image = {
		video = "gfx/event_pictures/unspecific_signed_contract.bk2"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/signed_contract"

	icon = "gfx/interface/icons/event_icons/event_default.dds"

	duration = 3

	immediate = {
		root = {
			if = {
				limit = {
					NOT = { has_modifier = modifier_transfer_state }
				}
				add_modifier = {
					name = modifier_transfer_state
					days = 90
				}
			}
		}
	}
	option = { 
		name = transfer_state_event.a
		trigger = {
			any_scope_state = {
				has_decree = decree_transfer_state_mark
				owner = root
			}
		}

		random_scope_state = {
			limit = {
				has_decree = decree_transfer_state_mark
				owner = root
			}
			save_scope_as = capital 
		}

		create_country = {
			origin = root
			state = scope:capital
			on_created = {
				set_strategy = ai_independent_transfer_state
				activate_law = law_type:law_anarchy
			}
		}

		every_scope_state = {
			limit = {
				has_decree = decree_transfer_state_mark
				owner = root
			}
			set_state_owner = scope:capital.owner
		}

		scope:target_country = {
			create_diplomatic_pact = {
				country = scope:capital.owner 
				type = dominion
			}
		}

		scope:target_country = { 
			create_diplomatic_play = {
				name = transfer_state
				target_country = scope:capital.owner
				type = dp_transfer_annex
				add_initiator_backers = {
					prev
				}
				add_war_goal = {
					holder = scope:capital.owner
					type = independence
					target_country = this
				}
			}
		}
		
		if = {
			limit = {
				has_modifier = modifier_transfer_state
			}
			remove_modifier = modifier_transfer_state
		}
	}
	option = { 
		default_option = yes
		name = transfer_state_event.b
		if = {
			limit = {
				has_modifier = modifier_transfer_state
			}
			remove_modifier = modifier_transfer_state
		}
	}
}